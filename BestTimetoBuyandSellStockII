class Solution {
public:
    int maxProfit(vector<int>& prices) {
        // Method 1
        /*
        int n = prices.size();
        if (n <= 1)
            return 0;
        int res = 0;
        int buy = prices[0], sell = buy;
        int i = 1;
        while (i < n) {
            if (prices[i] >= sell) {
                sell = prices[i];
            }
            else {
                res += sell - buy;
                buy = prices[i];
                sell = buy;
            }
            ++i;
        }
        res += (sell > buy) ? sell - buy : 0;
        return res;
        */
        
        // Method 2: add all the positive diff between neighbors
        int n = prices.size();
        if (n <= 1)
            return 0;
        int res = 0;
        for (int i = 0; i < n - 1; ++i) {
            res += (prices[i + 1] > prices[i]) ? prices[i + 1] - prices[i] : 0;
        }
        return res;
        
    }
};
